version: '3'
services:
    zookeeper:
        image: wurstmeister/zookeeper
        container_name: zookeeper
        ports:
          - "2181:2181"
        environment:
          - KAFKA_ADVERTISED_HOST_NAME=zookeeper
    
    kafka:
        image: wurstmeister/kafka
        container_name: kafka
        ports:
            - "9092:9092"
        environment:
            - KAFKA_ADVERTISED_HOST_NAME=127.0.0.1
            - KAFKA_ADVERTISED_PORT=9092
            - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
        depends_on:
            - zookeeper

    neo4j:
        image: neo4j:latest
        container_name: neo4j
        ports:
            - "7474:7474"
            - "7687:7687"
    
    mysql:
        image: mysql:latest
        container_name: mysql
        restart: always
        ports:
            - "3300:3306"
        environment: 
            MYSQL_ROOT_PASSWORD: 'nistagrammysqlroot'
            MYSQL_USER: 'nistagram'
            MYSQL_PASSWORD: 'nistagrammysqlpassword'
        volumes: 
            - db-data:/var/lib/mysql

    gateway:
        image: nginx:1.19.8-alpine
        container_name: nginx
    #    build:
    #      context: ./nginx-nistagram-api-gateway
    #      dockerfile: Dockerfile
        ports:
            - 8080:8080
        networks:
            - backend
    #    volumes:
    #        - ./nginx-nistagram-api-gateway/nginx.conf:/etc/nginx/nginx.conf
    #        - ./nginx-nistagram-api-gateway/api_gateway.conf:/etc/nginx/api_gateway.conf
    
    auth-service:
        image: nistagram/auth-service
        container_name: auth-service
        build:
            context: ./spring-nistagram-auth-service
            dockerfile: Dockerfile
        ports:
            - 9000:8080
        networks:
            - backend
    
    campaign-service:
        image: nistagram/campaign-service
        container_name: campaign-service
        build:
            context: ./spring-nistagram-campaign-service
            dockerfile: Dockerfile
        ports:
            - 9001:8080
        networks:
            - backend
    
    chat-service:
        image: nistagram/chat-service
        container_name: chat-service
        build:
            context: ./spring-nistagram-chat-service
            dockerfile: Dockerfile
        ports:
            - 9002:8080
        networks:
            - backend

    feed-service:
        image: nistagram/feed-service
        container_name: feed-service
        build:
            context: ./spring-nistagram-feed-service
            dockerfile: Dockerfile
        ports:
            - 9003:8080
        networks:
            - backend

    media-service:
        image: nistagram/media-service
        container_name: media-service
        build:
            context: ./spring-nistagram-media-service
            dockerfile: Dockerfile
        ports:
            - 9004:8080
        networks:
            - backend
    
    notification-service:
        image: nistagram/notification-service
        container_name: notification-service
        build:
            context: ./spring-nistagram-notification-service
            dockerfile: Dockerfile
        ports:
            - 9005:8080
        networks:
            - backend

    post-service:
        image: nistagram/post-service
        container_name: post-service
        build:
            context: ./spring-nistagram-post-service
            dockerfile: Dockerfile
        ports:
            - 9006:8080
        networks:
            - backend
    
    user-graph-service:
        image: nistagram/user-graph-service
        container_name: user-graph-service
        build:
            context: ./spring-nistagram-user-graph-service
            dockerfile: Dockerfile
        ports:
            - 9007:8080
        networks:
            - backend
    
    user-service:
        image: nistagram/user-service
        container_name: user-service
        build:
            context: ./spring-nistagram-user-service
            dockerfile: Dockerfile
        ports:
            - 9008:8080
        networks:
            - backend
            
volumes:
    db-data: 
        name: server-database

networks:
    backend: 
        name: nistagram
        driver: bridge
